version: '3.8'

services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: ./Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8761

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    container_name: api-gateway
    ports:
      - "9090:9090"
    networks:
      - cenima-network
    depends_on:
      - user-service
    expose:
      - 9090
    restart: unless-stopped
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/

  notification-service:
    build:
      context: ./notification-service
      dockerfile: ./Dockerfile
    container_name: notification-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - db-postgresql-notification
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8081
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgresql-notification:5432/db_notification_service_cinema_system_microservices_v1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1111

  user-service:
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    container_name: user-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - db-postgresql-user
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8082
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgresql-user:5432/db_user_service_cinema_system_microservices_v1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1111

  movie-service:
    build:
      context: ./movie-service
      dockerfile: ./Dockerfile
    container_name: movie-service
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - db-postgresql-movie
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8083
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgresql-movie:5432/db_movie_service_cinema_system_microservices_v1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1111

  schedule-service:
    build:
      context: ./schedule-service
      dockerfile: ./Dockerfile
    container_name: schedule-service
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
      - db-postgresql-schedule
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8084
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgresql-schedule:5432/db_schedule_service_cinema_system_microservices_v1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1111

  booking-service:
    build:
      context: ./booking-service
      dockerfile: ./Dockerfile
    container_name: booking-service
    ports:
      - "8085:8085"
    depends_on:
      - eureka-server
      - db-postgresql-booking
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8085
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgresql-booking:5432/db_booking_service_cinema_system_microservices_v1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1111

  payment-service:
    build:
      context: ./payment-service
      dockerfile: ./Dockerfile
    container_name: payment-service
    ports:
      - "8086:8086"
    depends_on:
      - eureka-server
      - db-postgresql-payment
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8086
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgresql-payment:5432/db_payment_service_cinema_system_microservices_v1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1111

  identification-service:
    build:
      context: ./identification-service
      dockerfile: ./Dockerfile
    container_name: identification-service
    ports:
      - "8087:8087"
    depends_on:
      - eureka-server
      - redis-cache-cenima
      - db-postgresql-user
    networks:
      - cenima-network
    restart: unless-stopped
    expose:
      - 8087
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgresql-user:5432/db_identification_service_cinema_system_microservices_v1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1111

  db-postgresql-notification:
    image: postgres:latest
    container_name: db-postgresql-notification
    volumes:
      - ./notification-service/src/main/resources/db-notification-service.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=db_notification_service_cinema_system_microservices_v1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
    networks:
      - cenima-network
    restart: unless-stopped

  db-postgresql-user:
    image: postgres:latest
    container_name: db-postgresql-user
    volumes:
      - ./user-service/src/main/resources/db_user_service.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=db_user_service_cinema_system_microservices_v1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
    networks:
      - cenima-network
    restart: unless-stopped

  db-postgresql-movie:
    image: postgres:latest
    container_name: db-postgresql-movie
    volumes:
      - ./movie-service/src/main/resources/db-movie-service.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=db_movie_service_cinema_system_microservices_v1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
    networks:
      - cenima-network
    restart: unless-stopped

  db-postgresql-schedule:
    image: postgres:latest
    container_name: db-postgresql-schedule
    volumes:
      - ./schedule-service/src/main/resources/db-schedule-service.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_DB=db_schedule_service_cinema_system_microservices_v1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
    networks:
      - cenima-network
    restart: unless-stopped

  db-postgresql-booking:
    image: postgres:latest
    container_name: db-postgresql-booking
    volumes:
      - ./booking-service/src/main/resources/db-booking-service.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5437:5432"
    environment:
      - POSTGRES_DB=db_booking_service_cinema_system_microservices_v1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
    networks:
      - cenima-network
    restart: unless-stopped

  db-postgresql-payment:
    image: postgres:latest
    container_name: db-postgresql-payment
    volumes:
      - ./payment-service/src/main/resources/db-payment-service.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5438:5432"
    environment:
      - POSTGRES_DB=db_payment_service_cinema_system_microservices_v1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
    networks:
      - cenima-network
    restart: unless-stopped

  redis-cache-cenima:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - cenima-network
    restart: unless-stopped

  rabbitmq-cenima:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - cenima-network
    restart: unless-stopped

  zookeeper-cenima:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-cenima
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - cenima-network
    restart: unless-stopped

  kafka-cenima:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-cenima
    depends_on:
      - zookeeper-cenima
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-cenima:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cenima:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - cenima-network
    restart: unless-stopped

networks:
  cenima-network:
    driver: bridge